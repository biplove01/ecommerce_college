{"ast":null,"code":"var _jsxFileName = \"/Users/biplovegautam/Java stuff/ecommerce/client/src/context/storeContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect } from \"react\";\nimport { food_list } from \"../assets/assets\";\nimport { useState } from \"react\";\n\n/*This is the context api used to manage the global state of the app*/\n/*This will be used to manage the cart items and user details*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StoreContext = /*#__PURE__*/createContext(null);\nconst StoreContextProvider = props => {\n  _s();\n  const [cartItems, setcartItems] = useState({}); // State to manage cart items\n\n  const addToCart = itemId => {\n    if (!cartItems[itemId]) {\n      setcartItems(prev => ({\n        ...prev,\n        [itemId]: 1\n      }));\n    } else {\n      setcartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] + 1\n      }));\n    }\n  };\n  const removeFromCart = itemId => {\n    if (cartItems[itemId] && cartItems[itemId] > 1) {\n      setcartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] - 1\n      }));\n    } else {\n      const newCartItems = {\n        ...cartItems\n      };\n      delete newCartItems[itemId];\n      setcartItems(newCartItems);\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = food_list.find(product => product._id === item);\n        totalAmount += cartItems[item] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n  const contextValue = {\n    food_list,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(StoreContextProvider, \"eGZ6KnJbNVQsZkFiSlUzA5eGYVk=\");\n_c = StoreContextProvider;\nexport default StoreContextProvider;\nvar _c;\n$RefreshReg$(_c, \"StoreContextProvider\");","map":{"version":3,"names":["createContext","useEffect","food_list","useState","jsxDEV","_jsxDEV","StoreContext","StoreContextProvider","props","_s","cartItems","setcartItems","addToCart","itemId","prev","removeFromCart","newCartItems","getTotalCartAmount","totalAmount","item","itemInfo","find","product","_id","price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/biplovegautam/Java stuff/ecommerce/client/src/context/storeContext.jsx"],"sourcesContent":["import {createContext, useEffect} from \"react\";\nimport {food_list} from \"../assets/assets\";\nimport { useState } from \"react\";\n\n/*This is the context api used to manage the global state of the app*/\n/*This will be used to manage the cart items and user details*/\n\nexport const StoreContext = createContext(null);\n\nconst StoreContextProvider = (props) => {\n\n    const [cartItems, setcartItems] = useState({}); // State to manage cart items\n\n    const addToCart = (itemId)=>{\n        if(!cartItems[itemId]){\n            setcartItems((prev)=>({...prev, [itemId]:1}))\n        }\n        else{\n            setcartItems((prev)=>({...prev, [itemId]:prev[itemId]+1}))\n        }\n    }\n\n    const removeFromCart = (itemId)=>{\n        if(cartItems[itemId] && cartItems[itemId]>1){\n            setcartItems((prev)=>({...prev, [itemId]:prev[itemId]-1}))\n        }\n        else{\n            const newCartItems = {...cartItems};\n            delete newCartItems[itemId];\n            setcartItems(newCartItems);\n        }\n    }\n    const getTotalCartAmount = ()=>{\n        let totalAmount = 0;\n        for(const item in cartItems){\n            if (cartItems[item]>0){\n                let itemInfo = food_list.find((product)=>product._id === item)\n                totalAmount += cartItems[item] * itemInfo.price\n            }    \n        }\n        return totalAmount;\n    }\n\n\n    const contextValue = {\n        food_list,\n        cartItems,\n        addToCart,\n        removeFromCart,\n        getTotalCartAmount\n    }\n        \n    \n    return(<StoreContext.Provider value={contextValue}>{props.children}</StoreContext.Provider>)\n}\n\nexport default StoreContextProvider;"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,SAAS,QAAO,OAAO;AAC9C,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAE/C,MAAMO,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhD,MAAMS,SAAS,GAAIC,MAAM,IAAG;IACxB,IAAG,CAACH,SAAS,CAACG,MAAM,CAAC,EAAC;MAClBF,YAAY,CAAEG,IAAI,KAAI;QAAC,GAAGA,IAAI;QAAE,CAACD,MAAM,GAAE;MAAC,CAAC,CAAC,CAAC;IACjD,CAAC,MACG;MACAF,YAAY,CAAEG,IAAI,KAAI;QAAC,GAAGA,IAAI;QAAE,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;MAAC,CAAC,CAAC,CAAC;IAC9D;EACJ,CAAC;EAED,MAAME,cAAc,GAAIF,MAAM,IAAG;IAC7B,IAAGH,SAAS,CAACG,MAAM,CAAC,IAAIH,SAAS,CAACG,MAAM,CAAC,GAAC,CAAC,EAAC;MACxCF,YAAY,CAAEG,IAAI,KAAI;QAAC,GAAGA,IAAI;QAAE,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;MAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,MACG;MACA,MAAMG,YAAY,GAAG;QAAC,GAAGN;MAAS,CAAC;MACnC,OAAOM,YAAY,CAACH,MAAM,CAAC;MAC3BF,YAAY,CAACK,YAAY,CAAC;IAC9B;EACJ,CAAC;EACD,MAAMC,kBAAkB,GAAGA,CAAA,KAAI;IAC3B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAI,MAAMC,IAAI,IAAIT,SAAS,EAAC;MACxB,IAAIA,SAAS,CAACS,IAAI,CAAC,GAAC,CAAC,EAAC;QAClB,IAAIC,QAAQ,GAAGlB,SAAS,CAACmB,IAAI,CAAEC,OAAO,IAAGA,OAAO,CAACC,GAAG,KAAKJ,IAAI,CAAC;QAC9DD,WAAW,IAAIR,SAAS,CAACS,IAAI,CAAC,GAAGC,QAAQ,CAACI,KAAK;MACnD;IACJ;IACA,OAAON,WAAW;EACtB,CAAC;EAGD,MAAMO,YAAY,GAAG;IACjBvB,SAAS;IACTQ,SAAS;IACTE,SAAS;IACTG,cAAc;IACdE;EACJ,CAAC;EAGD,oBAAOZ,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EAAEpB,KAAK,CAACoB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAC/F,CAAC;AAAAvB,EAAA,CA7CKF,oBAAoB;AAAA0B,EAAA,GAApB1B,oBAAoB;AA+C1B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}